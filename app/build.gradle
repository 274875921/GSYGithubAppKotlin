apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'realm-android'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.shuyu.github.kotlin"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 5
        versionName "1.0.4"
        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath = true
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }

        Properties properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
        buildConfigField "String", "CLIENT_ID", properties.getProperty("CLIENT_ID")
        buildConfigField "String", "CLIENT_SECRET", properties.getProperty("CLIENT_SECRET")

        //CMake
        externalNativeBuild {
            cmake {
                cppFlags ""
            }
            ndk {
                abiFilters 'armeabi-v7a'
            }
        }

        ndk {
            abiFilters 'armeabi-v7a'
        }
    }

    externalNativeBuild {
        cmake {
            path 'CMakeLists.txt'
        }
    }


    /*sourceSets {
        main {
            //CMake 增加jniLibs源文件夹
            jniLibs.srcDirs = ['../distribution/libs']
        }
    }*/

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    kapt {
        //generateStubs = true
        arguments {
            arg("AROUTER_MODULE_NAME", project.getName())
        }
        javacOptions {
            // 增加错误提示
            option("-Xmaxerrs", 500)
        }
    }
    lintOptions {
        abortOnError false
    }
    dataBinding {
        enabled = true
    }
    signingConfigs {
        debug {
            storeFile file("../gsygithubapp-debug.jks")
            storePassword "123456"
            keyAlias "debug"
            keyPassword "123456"
        }
        release {
            storeFile file("../gsygithubapp-debug.jks")
            storePassword "123456"
            keyAlias "debug"
            keyPassword "123456"
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.release
        }
    }
    configurations {
        cleanedAnnotations
        compile.exclude group: 'org.jetbrains' , module:'annotations'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //kotlin plugin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.anko:anko:$anko_version"
    //kotlin ktx (used 0.3 now , 1.0.0 need api28)
    implementation "androidx.core:core-ktx:$ktx_version"

    ///databinding
    //kapt "com.android.databinding:compiler:$gradle_version"

    //support
    implementation "androidx.recyclerview:recyclerview:${android_support}"
    implementation "androidx.appcompat:appcompat:$androidx_appcompat"
    implementation "androidx.legacy:legacy-support-v4:$android_other_version"
    implementation "com.google.android.material:material:$android_other_version"


    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    implementation 'androidx.room:room-runtime:2.1.0'
    kapt 'androidx.lifecycle:lifecycle-compiler:2.0.0'
    kapt 'androidx.room:room-compiler:2.1.0'


    //constraint
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    //navigation
    implementation 'androidx.navigation:navigation-fragment:2.1.0-beta02'
    implementation 'androidx.navigation:navigation-ui:2.1.0-beta02'


    //dagger
    implementation "com.google.dagger:dagger:${dagger_version}"
    kapt "com.google.dagger:dagger-compiler:${dagger_version}"
    implementation "com.google.dagger:dagger-android-support:${dagger_version}"
    kapt "com.google.dagger:dagger-android-processor:${dagger_version}"

    //HTTP retrofit2
    implementation "com.squareup.okhttp3:logging-interceptor:${okhttp3_version}"
    implementation "com.squareup.retrofit2:retrofit:${retrofit_version}"
    implementation "com.squareup.retrofit2:converter-gson:${retrofit_version}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${retrofit_version}"
    implementation "com.squareup.retrofit2:converter-scalars:${retrofit_version}"
    implementation("com.squareup.retrofit2:converter-simplexml:${rx_version}") {
        exclude group: 'xpp3', module: 'xpp3'
        exclude group: 'stax', module: 'stax-api'
        exclude group: 'stax', module: 'stax'
    }

    ///ARouter
    implementation "com.alibaba:arouter-api:${arouter_api_versoion}"
    kapt "com.alibaba:arouter-compiler:${arouter_compiler_versoion}"


    //RxJava
    implementation "io.reactivex.rxjava2:rxandroid:${rx_version}"
    implementation "io.reactivex.rxjava2:rxjava:${rx_version}"

    //eventbus
    implementation "org.greenrobot:eventbus:${event_bus}"

    //glide
    implementation "com.github.CarGuo.GSYImageLoader:GSYGlideLoader:${gsy_image_load}"
    implementation "com.github.CarGuo.GSYImageLoader:GSYImageLoader:${gsy_image_load}"


    ///webview
    implementation "com.just.agentweb:agentweb:${agentweb_version}"
    implementation "com.just.agentweb:download:${agentweb_version}"

    //TABBAR
    implementation "devlight.io:navigationtabbar:${tabbar_version}"

    //iconics 3.1.0开始使用了androidx
    implementation "com.mikepenz:iconics-core:${iconics_version}"
    implementation "com.mikepenz:iconics-views:${iconics_version}"
    implementation 'com.mikepenz:material-design-iconic-typeface:2.2.0.5@aar'
    implementation 'com.mikepenz:fontawesome-typeface:5.3.1.1@aar'
    implementation 'com.mikepenz:octicons-typeface:3.2.0.5@aar'
    implementation 'com.mikepenz:weather-icons-typeface:2.0.10.5@aar'
    implementation 'com.mikepenz:foundation-icons-typeface:3.0.0.5@aar'
    implementation 'com.mikepenz:ionicons-typeface:2.0.1.5@aar'

    //EDIT TEXT
    implementation "com.github.HITGIF:TextFieldBoxes:${textfiled_box_version}"


    ///loading spinkit
    implementation "com.github.ybq:Android-SpinKit:${spinkit_version}"

    ///recycler adapter
    implementation "com.github.CarGuo.LazyRecyclerAdapter:CommonRecycler-Kotlin:${recycler_common_version}"

    ///drop menu
    implementation "com.github.dongjunkun:DropDownMenu:${drop_menu_version}"

    ///markdown
    implementation "com.github.tiagohm.MarkdownView:library:${richtext_version}"
    implementation "io.noties.markwon:core:${markwon_version}"
    implementation "io.noties.markwon:html:${markwon_version}"
    implementation "io.noties.markwon:recycler:$markwon_version"
    implementation "io.noties.markwon:recycler-table:$markwon_version"
    implementation "io.noties.markwon:linkify:$markwon_version"
    implementation "io.noties.markwon:image:$markwon_version"
    implementation "io.noties.markwon:image-glide:$markwon_version"
    implementation "io.noties.markwon:syntax-highlight:$markwon_version"

    ///Prism4j
    kapt "io.noties:prism4j-bundler:${prism4j_version}"

    ///dialogplus
    implementation "com.orhanobut:dialogplus:${dialogplus_version}"

    ///Drawer
    implementation "com.mikepenz:materialdrawer:6.0.9"

    ///lottie
    implementation "com.airbnb.android:lottie:${lottie_version}"


    ///bugly
    implementation "com.tencent.bugly:crashreport:${bugly_version}"

    ///PHOTO VIEW
    implementation "com.github.chrisbanes:PhotoView:${photoview_version}"


    implementation "com.github.hotchemi:permissionsdispatcher:${permission_version}"
    kapt "com.github.hotchemi:permissionsdispatcher-processor:${permission_version}"
}
